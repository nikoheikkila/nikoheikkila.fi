version: "3"
dotenv:
    - .env

tasks:
    install:
        desc: Install dependencies with Yarn
        sources:
            - package.json
            - yarn.lock
        generates:
            - node_modules/*
        cmds:
            - yarn --frozen-lockfile --prefer-offline

    format:
        desc: Format codebase
        sources:
            - "{{.EXTS}}"
        cmds:
            - npx prettier --write "{{.EXTS}}"
        vars:
            EXTS: "./**/*.{ts,tsx,json,yml,yaml,md}"

    lint:
        desc: Lint codebase
        deps:
            - lint-style
            - lint-lang
            - lint-types

    lint-style:
        desc: Lint codebase for style issues
        sources:
            - "{{.EXTS}}"
        cmds:
            - npx prettier --check "{{.EXTS}}"
        vars:
            EXTS: "./**/*.{ts,tsx,json,yml,yaml,md}"

    lint-lang:
        desc: Lint Markdown files for insensitive language
        sources:
            - content/**/*.md
        cmds:
            - npx alex -q .

    lint-types:
        desc: Lint TypeScript files for incorrect typing
        sources:
            - ./**/*.{ts,tsx}
        cmds:
            - npx tsc --noEmit

    test:
        desc: Run application test suite
        deps:
            - lint
        cmds:
            - task: test-unit
            - task: test-react
            - task: test-e2e

    test-unit:
        desc: Run unit tests
        deps:
            - install
        sources:
            - src/**/*.{ts,tsx}
        cmds:
            - npx vitest

    test-react:
        desc: Run React component tests
        deps:
            - install
        sources:
            - src/**/*.ts
            - src/**/*.tsx
            - playwright-ct.config.ts
        cmds:
            - npx playwright test --config playwright-ct.config.ts {{.CLI_ARGS}}

    test-e2e:
        desc: Run end-to-end tests
        deps:
            - build
        sources:
            - ./**/*.{ts,tsx}
        cmds:
            - npx playwright test {{.CLI_ARGS}}

    dev:
        desc: Run development server
        deps:
            - task: dev-gatsby
            - task: dev-types

    dev-gatsby:
        deps:
            - install
        desc: Serve the Gatsby development site
        cmds:
            - yarn dev

    dev-types:
        deps:
            - install
        desc: Fetch and generate GraphQL types from development server
        cmds:
            - npx graphql-codegen --watch

    build:
        desc: Build the Gatsby production site
        deps:
            - install
        env:
            GATSBY_CPU_COUNT: logical_cores
            NODE_ENV: production
        cmds:
            - yarn build

    serve:
        desc: Serve the Gatsby production site
        deps:
            - build
        cmds:
            - yarn serve
